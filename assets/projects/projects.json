{
    "EditDB": {
        "name": "EditDB",
        "description": "Приложение для редактирования базы данных, которая хранит цитаты.<br>В реализации используется разделение прав доступа по ролям при работе с записями.",
        "category": "app",
        "github": "https://github.com/DeNeMiX83/EditDB",
        "technologies": [
            "java",
            "javafx",
            "mysql"
        ]
    },
    "YandexLicey_telegramm_bot": {
        "name": "YandexLicey_telegramm_bot",
        "description": "Бот для распределения задач между подчиненными.<br>Бот позволяет добавить список подчиненных, и после этого назначать им задачи.<br>При выполнении задачи подчиненные смогут прикрепить отчет о выполнении задачи в виде: голосового сообщения, фотографии, файла.",
        "category": "bot",
        "github": "https://github.com/DeNeMiX83/YandexLicey_telegramm_bot",
        "technologies": [
            "python",
            "aiogram",
            "sqlalchemy",
            "postgresql"
        ]
    },
    "Pool search assistant": {
        "name": "Pool search assistant",
        "description": "API-сервис для рекомендаций бассейнов на основе понравившихся бассейнов. <br>Для работы сервиса использовался датасет из открытых данных города Москва <a href='https://data.mos.ru/opendata/7708308010-basseyny-plavatelnye-krytye' target='_blank'>- ссылка на датасет</a>Для рекомендаций использовался алгоритм по косинусному расстоянию.<br><a href='https://miheev.su/pool/api/v1/docs' target='_blank'>- ссылка на докоментацию сервиса API</a>",
        "category": "api",
        "github": "https://github.com/DeNeMiX83/pool_search_assistant",
        "technologies": [
            "python",
            "fastapi",
            "sqlalchemy",
            "postgresql",
            "redis",
            "docker-compose"
        ]
    },
    "Yandex_backend_school": {
        "name": "Yandex_backend_school",
        "description": "Решение задачи из Школы бэкенд-разработки Яндекса",
        "category": "api",
        "github": "https://github.com/DeNeMiX83/Yandex_backend_school",
        "technologies": [
            "python",
            "drf",
            "postgresql",
            "docker-compose"
        ]
    },
    "Blackjack": {
        "name": "Blackjack",
        "description": 
            "Телеграмм-бот для игры в 'Блэкджек'<br>- Бот с полноценным геймплеем и защитой от спама (троттлингом).<br>- Отдельный сервис для пуллинга Telegram-API с RabbitMQ.<br>- Сервис API для администратора.<br>- Авто-деплой на удаленный сервер и загрузка образа в registry с помощью Github-Actions.",
        "category": "api",
        "github": "https://github.com/DeNeMiX83/black_jack",
        "technologies": [
            "python",
            "aiohttp",
            "rabbitmq",
            "postgresql",
            "sqlalchemy",
            "redis",
            "docker-compose"
        ]
    },
    "Doc search": {
        "name": "Doc search",
        "description":
            "- Сервис принимает на вход произвольный текстовый запрос, ищет документы по тексту документа в индексе и возвращает первые 20 документов со всем полями БД, упорядоченные по дате создания.<br>- Создание документа одновременно в БД и в индексе.<br>- При создании документа с новыми рубриками, они создаются автоматически.<br>- Удаление документов из БД и индекса по полю id.<br>- Поднят сервис kibana.",
        "category": "api",
        "github": "https://github.com/DeNeMiX83/search_by_document_texts",
        "technologies": [
            "python",
            "fastapi",
            "elasticsearch",
            "postgresql",
            "sqlalchemy",
            "docker-compose"
        ]
    }
}